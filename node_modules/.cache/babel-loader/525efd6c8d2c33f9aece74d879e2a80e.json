{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/Unterricht/Moudule05-React/my Project - Countries/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useState, useEffect } from \"react\";\nimport Navigation from './component/Navigation';\nimport CountriesGrid from './component/CountriesGrid';\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [countries, setCountries] = useState([]);\n  let url = 'https://restcountries.com/v2/all';\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(url);\n        const data = await response.json();\n        console.log(data);\n        if (data) setCountries(data);\n        if (countries) console.log('countries', countries);\n      } catch (error) {\n        console.log(\"error\", error);\n      }\n    };\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App container my-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"mb-4 text-secondary\",\n        children: \"Countries and Regions in the World\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"countries-container\",\n        children: /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"/World-Flag-map.jpg\",\n              alt: \"map\",\n              width: \"100%\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 31\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/all_countries\",\n            element: countries && countries.map(e => {\n              return /*#__PURE__*/_jsxDEV(CountriesGrid, {\n                name: e.name,\n                region: e.region,\n                capital: e.capital,\n                flag: e.flag,\n                languages: e.languages,\n                nativeName: e.nativeName,\n                area: e.area,\n                population: e.population\n              }, e.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 20\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"/World-Flag-map.jpg\",\n              alt: \"map\",\n              width: \"100%\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 14\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 3\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"K0y4bryvLZXgPHUuMHBgwr/1eOM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Navigation","CountriesGrid","BrowserRouter","Router","Routes","Route","App","countries","setCountries","url","fetchData","response","fetch","data","json","console","log","error","map","e","name","region","capital","flag","languages","nativeName","area","population","id"],"sources":["/home/user/Desktop/Unterricht/Moudule05-React/my Project - Countries/src/App.js"],"sourcesContent":["import './App.css';\nimport React , {useState , useEffect}from \"react\";\nimport Navigation from './component/Navigation';\nimport CountriesGrid from './component/CountriesGrid';\nimport {BrowserRouter as Router, Routes, Route} from \"react-router-dom\";\n\n\nfunction App() {\n    const [countries , setCountries] = useState([])\n    let url = 'https://restcountries.com/v2/all';\n\n    useEffect(()=>{\n      const fetchData = async ()=>{\n        try{\n          const response = await fetch (url);\n          const data = await response.json();\n          console.log(data);\n          \n          if(data) setCountries(data)\n            if(countries)console.log('countries',countries);\n          }catch (error){\n          console.log(\"error\", error);\n        }\n      }\n      fetchData()\n    } , [])\n\n      return (\n    <Router>\n      <div className=\"App container my-3\">\n        <h1 className='mb-4 text-secondary'>Countries and Regions in the World</h1>\n          <Navigation/> \n        <br/>\n        <div className='countries-container'>\n        <Routes>\n            <Route path = '/' \n\n                   element = {<img src='/World-Flag-map.jpg' alt='map' width='100%'/>}/>\n        \n            <Route path = '/all_countries' \n                   element = {countries && countries.map(e=>{\n                      return(\n                   <CountriesGrid key={e.id}\n                                  name={e.name}\n                                  region={e.region}\n                                  capital={e.capital}\n                                  flag={e.flag}\n                                  languages={e.languages}\n                                  nativeName={e.nativeName}\n                                  area={e.area}\n                                  population={e.population}\n                                />)\n                   })\n                   }/> \n\n  <Route path = '/' \n\n  element = {<img src='/World-Flag-map.jpg' alt='map' width='100%'/>}/>\n                              \n        </Routes>\n        </div>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n\n"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA2BC,SAA3B,QAA0C,OAA1C;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,OAAOC,aAAP,MAA0B,2BAA1B;AACA,SAAQC,aAAa,IAAIC,MAAzB,EAAiCC,MAAjC,EAAyCC,KAAzC,QAAqD,kBAArD;;;AAGA,SAASC,GAAT,GAAe;EAAA;;EACX,MAAM,CAACC,SAAD,EAAaC,YAAb,IAA6BV,QAAQ,CAAC,EAAD,CAA3C;EACA,IAAIW,GAAG,GAAG,kCAAV;EAEAV,SAAS,CAAC,MAAI;IACZ,MAAMW,SAAS,GAAG,YAAU;MAC1B,IAAG;QACD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAEH,GAAF,CAA5B;QACA,MAAMI,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;QACAC,OAAO,CAACC,GAAR,CAAYH,IAAZ;QAEA,IAAGA,IAAH,EAASL,YAAY,CAACK,IAAD,CAAZ;QACP,IAAGN,SAAH,EAAaQ,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAwBT,SAAxB;MACd,CAPH,CAOG,OAAOU,KAAP,EAAa;QACdF,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBC,KAArB;MACD;IACF,CAXD;;IAYAP,SAAS;EACV,CAdQ,EAcL,EAdK,CAAT;EAgBE,oBACF,QAAC,MAAD;IAAA,uBACE;MAAK,SAAS,EAAC,oBAAf;MAAA,wBACE;QAAI,SAAS,EAAC,qBAAd;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEI,QAAC,UAAD;QAAA;QAAA;QAAA;MAAA,QAFJ,eAGE;QAAA;QAAA;QAAA;MAAA,QAHF,eAIE;QAAK,SAAS,EAAC,qBAAf;QAAA,uBACA,QAAC,MAAD;UAAA,wBACI,QAAC,KAAD;YAAO,IAAI,EAAG,GAAd;YAEO,OAAO,eAAI;cAAK,GAAG,EAAC,qBAAT;cAA+B,GAAG,EAAC,KAAnC;cAAyC,KAAK,EAAC;YAA/C;cAAA;cAAA;cAAA;YAAA;UAFlB;YAAA;YAAA;YAAA;UAAA,QADJ,eAKI,QAAC,KAAD;YAAO,IAAI,EAAG,gBAAd;YACO,OAAO,EAAIH,SAAS,IAAIA,SAAS,CAACW,GAAV,CAAcC,CAAC,IAAE;cACtC,oBACH,QAAC,aAAD;gBACe,IAAI,EAAEA,CAAC,CAACC,IADvB;gBAEe,MAAM,EAAED,CAAC,CAACE,MAFzB;gBAGe,OAAO,EAAEF,CAAC,CAACG,OAH1B;gBAIe,IAAI,EAAEH,CAAC,CAACI,IAJvB;gBAKe,SAAS,EAAEJ,CAAC,CAACK,SAL5B;gBAMe,UAAU,EAAEL,CAAC,CAACM,UAN7B;gBAOe,IAAI,EAAEN,CAAC,CAACO,IAPvB;gBAQe,UAAU,EAAEP,CAAC,CAACQ;cAR7B,GAAoBR,CAAC,CAACS,EAAtB;gBAAA;gBAAA;gBAAA;cAAA,QADG;YAWF,CAZuB;UAD/B;YAAA;YAAA;YAAA;UAAA,QALJ,eAqBN,QAAC,KAAD;YAAO,IAAI,EAAG,GAAd;YAEA,OAAO,eAAI;cAAK,GAAG,EAAC,qBAAT;cAA+B,GAAG,EAAC,KAAnC;cAAyC,KAAK,EAAC;YAA/C;cAAA;cAAA;cAAA;YAAA;UAFX;YAAA;YAAA;YAAA;UAAA,QArBM;QAAA;UAAA;UAAA;UAAA;QAAA;MADA;QAAA;QAAA;QAAA;MAAA,QAJF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADE;AAqCL;;GAzDQtB,G;;KAAAA,G;AA2DT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}