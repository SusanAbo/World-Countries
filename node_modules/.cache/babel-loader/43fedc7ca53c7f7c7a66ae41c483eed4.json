{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/Unterricht/Moudule05-React/my Project - Countries/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './css/App.css';\nimport './css/navigation.css';\nimport './css/countries-grid.css';\nimport './css/continents.css';\nimport React, { useState, useEffect } from \"react\";\nimport Home from './component/Home';\nimport Navigation from './component/Navigation';\nimport CountriesGrid from './component/CountriesGrid';\nimport Country from './component/Country';\nimport FiveContinents from './component/FiveContinents';\nimport Continent from './component/Continent';\nimport Search from './component/Search';\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [countries, setCountries] = useState([]);\n  let url = 'https://restcountries.com/v2/all';\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(url);\n        const data = await response.json();\n        console.log(data);\n        if (data) setCountries(data);\n        if (countries) console.log('countries', countries);\n      } catch (error) {\n        console.log(\"error\", error);\n      }\n    };\n\n    fetchData();\n  }, []);\n\n  const findLand = e => {\n    return countries && countries.filter(land => land.name === e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App my-1 \",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"mb-4 \",\n          children: \"Countries and Regions in the World\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Navigation, {\n          countries: countries\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(Home, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 36\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/all_countries/:landName\",\n            element: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"land-details\",\n              children: /*#__PURE__*/_jsxDEV(Country, {\n                countries: countries\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 63\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/all_countries\",\n            element: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"countries-container container\",\n              children: [countries && countries.map(e => {\n                return /*#__PURE__*/_jsxDEV(CountriesGrid, {\n                  name: e.name,\n                  region: e.region,\n                  capital: e.capital,\n                  flag: e.flag,\n                  languages: e.languages,\n                  nativeName: e.nativeName,\n                  area: e.area,\n                  population: e.population\n                }, e.id, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 25\n                }, this);\n              }), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 26\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/continent/\",\n            element: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"home-items\",\n              children: /*#__PURE__*/_jsxDEV(FiveContinents, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 62\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 34\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/continent/:name\",\n            element: /*#__PURE__*/_jsxDEV(Continent, {\n              countries: countries\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/search/ID\",\n            element: /*#__PURE__*/_jsxDEV(Search, {\n              countries: countries,\n              findLand: findLand\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"K0y4bryvLZXgPHUuMHBgwr/1eOM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Home","Navigation","CountriesGrid","Country","FiveContinents","Continent","Search","BrowserRouter","Router","Routes","Route","App","countries","setCountries","url","fetchData","response","fetch","data","json","console","log","error","findLand","e","filter","land","name","target","value","map","region","capital","flag","languages","nativeName","area","population","id"],"sources":["/home/user/Desktop/Unterricht/Moudule05-React/my Project - Countries/src/App.js"],"sourcesContent":["import './css/App.css';\nimport './css/navigation.css';\nimport './css/countries-grid.css';\nimport './css/continents.css';\n\nimport React , {useState , useEffect}from \"react\";\nimport Home from './component/Home'\nimport Navigation from './component/Navigation';\nimport CountriesGrid from './component/CountriesGrid';\nimport Country from './component/Country';\nimport FiveContinents from './component/FiveContinents';\nimport Continent from './component/Continent';\nimport Search from './component/Search';\nimport {BrowserRouter as Router, Routes, Route} from \"react-router-dom\";\n\n\nfunction App() {\n    const [countries , setCountries] = useState([])\n    let url = 'https://restcountries.com/v2/all';\n\n    useEffect(()=>{\n      const fetchData = async ()=>{\n        try{\n          const response = await fetch (url);\n          const data = await response.json();\n          console.log(data);\n          \n          if(data) setCountries(data)\n            if(countries)console.log('countries',countries);\n          }catch (error){\n          console.log(\"error\", error);\n        }\n      }\n      fetchData()\n    } , [])\n\n    const findLand=(e)=>{\n     return countries && countries.filter(land => land.name === e.target.value)\n    }    \n\n\n    return (\n    <Router>\n      <div className=\"App my-1 \">\n          <header >\n            <h1 className='mb-4 '>Countries and Regions in the World</h1>\n            <Navigation countries={countries}/> \n          </header>\n               \n          <div className='container'>\n              <Routes>\n                  <Route path = '/' \n                        element = {<Home/>}/>\n\n                  <Route path = '/all_countries/:landName' \n                     element = {<div className='land-details'><Country countries={countries}/></div>}/>   \n                     \n                     \n          \n                  <Route path = '/all_countries' \n                        element = \n                        {<div className='countries-container container'>\n                        {countries && countries.map(e=>{\n                            return(\n                        <CountriesGrid key={e.id}\n                                        name={e.name}\n                                        region={e.region}\n                                        capital={e.capital}\n                                        flag={e.flag}\n                                        languages={e.languages}\n                                        nativeName={e.nativeName}\n                                        area={e.area}\n                                        population={e.population}\n                                      />)\n                        })\n                        } </div>} />\n              \n\n              <Route path = '/continent/' \n                     element = { <div className='home-items'><FiveContinents/></div>}/>\n              <Route path = '/continent/:name' \n                     element = {<Continent countries={countries}/>}/>\n\n              <Route path = '/search/ID'\n                     element = {<Search countries={countries}\n                                        findLand = {findLand}/>}/>\n                                    \n              </Routes>\n          </div>\n        </div>\n    </Router>\n  );\n}\n\nexport default App;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}