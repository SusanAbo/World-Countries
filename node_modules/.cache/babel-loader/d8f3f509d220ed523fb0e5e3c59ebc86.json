{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/Unterricht/Moudule05-React/my Project - Countries/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './css/App.css';\nimport './css/navigation.css';\nimport './css/countries-grid.css';\nimport './css/continents.css';\nimport React, { useState, useEffect } from \"react\";\nimport Navigation from './component/Navigation';\nimport CountriesGrid from './component/CountriesGrid';\nimport Continents from './component/Continents';\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [countries, setCountries] = useState([]);\n  let url = 'https://restcountries.com/v2/all';\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(url);\n        const data = await response.json();\n        console.log(data);\n        if (data) setCountries(data);\n        if (countries) console.log('countries', countries);\n      } catch (error) {\n        console.log(\"error\", error);\n      }\n    };\n\n    fetchData();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App my-1 \",\n      children: [/*#__PURE__*/_jsxDEV(\"header\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          className: \"mb-4 text-secondary\",\n          children: \"Countries and Regions in the World\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Navigation, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"countries-container\",\n        children: /*#__PURE__*/_jsxDEV(Routes, {\n          children: [/*#__PURE__*/_jsxDEV(Route, {\n            path: \"/\",\n            element: /*#__PURE__*/_jsxDEV(\"img\", {\n              src: \"/World-Flag-map.jpg\",\n              alt: \"map\",\n              width: \"250%\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 36\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/all_countries\",\n            element: countries && countries.map(e => {\n              return /*#__PURE__*/_jsxDEV(CountriesGrid, {\n                name: e.name,\n                region: e.region,\n                capital: e.capital,\n                flag: e.flag,\n                languages: e.languages,\n                nativeName: e.nativeName,\n                area: e.area,\n                population: e.population\n              }, e.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 25\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Route, {\n            path: \"/continents\",\n            element: countries && countries.map(e => {\n              return /*#__PURE__*/_jsxDEV(Continents, {\n                countries: countries\n              }, e.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 23\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"K0y4bryvLZXgPHUuMHBgwr/1eOM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Navigation","CountriesGrid","Continents","BrowserRouter","Router","Routes","Route","App","countries","setCountries","url","fetchData","response","fetch","data","json","console","log","error","map","e","name","region","capital","flag","languages","nativeName","area","population","id"],"sources":["/home/user/Desktop/Unterricht/Moudule05-React/my Project - Countries/src/App.js"],"sourcesContent":["import './css/App.css';\nimport './css/navigation.css';\nimport './css/countries-grid.css';\nimport './css/continents.css';\n\nimport React , {useState , useEffect}from \"react\";\nimport Navigation from './component/Navigation';\nimport CountriesGrid from './component/CountriesGrid';\nimport Continents from './component/Continents'\nimport {BrowserRouter as Router, Routes, Route} from \"react-router-dom\";\n\n\nfunction App() {\n    const [countries , setCountries] = useState([])\n    let url = 'https://restcountries.com/v2/all';\n\n    useEffect(()=>{\n      const fetchData = async ()=>{\n        try{\n          const response = await fetch (url);\n          const data = await response.json();\n          console.log(data);\n          \n          if(data) setCountries(data)\n            if(countries)console.log('countries',countries);\n          }catch (error){\n          console.log(\"error\", error);\n        }\n      }\n      fetchData()\n    } , [])\n\n      return (\n    <Router>\n      <div className=\"App my-1 \">\n          <header >\n            <h1 className='mb-4 text-secondary'>Countries and Regions in the World</h1>\n            <Navigation/> \n          </header>\n               \n          <div className='countries-container'>\n              <Routes>\n                  <Route path = '/' \n                        element = {<img src='/World-Flag-map.jpg' alt='map' width='250%'/>}/>\n              \n                  <Route path = '/all_countries' \n                        element = {countries && countries.map(e=>{\n                            return(\n                        <CountriesGrid key={e.id}\n                                        name={e.name}\n                                        region={e.region}\n                                        capital={e.capital}\n                                        flag={e.flag}\n                                        languages={e.languages}\n                                        nativeName={e.nativeName}\n                                        area={e.area}\n                                        population={e.population}\n                                      />)\n                        })\n                        }/> \n\n              <Route path = '/continents' \n                     element = {countries && countries.map(e=>{\n                      return(\n                      <Continents key={e.id}\n                      countries={countries}/>)\n                  })}/>\n                                    \n              </Routes>\n          </div>\n        </div>\n    </Router>\n  );\n}\n\nexport default App;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}