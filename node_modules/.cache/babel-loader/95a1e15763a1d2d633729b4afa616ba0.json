{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/Unterricht/Moudule05-React/my Project - Countries/src/component/Country.jsx\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useParams } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Country = _ref => {\n  _s();\n\n  let {\n    countries\n  } = _ref;\n  let {\n    landName\n  } = useParams();\n  let {\n    name,\n    region,\n    capital,\n    flag,\n    languages,\n    nativeName,\n    area,\n    population\n  } = countries && countries.find(e => e.name === landName);\n  return (\n    /*#__PURE__*/\n    // <div>Test from Country</div>\n    _jsxDEV(\"div\", {\n      className: \"lands-card card\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-img\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: \"card-img-top\",\n          src: flag,\n          alt: \"land-flag\",\n          width: '40%'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 11,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"card-body \",\n        children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n          className: \"card-title text-danger\",\n          children: 'üìç ' + name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          className: \"card-ul\",\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Region : \", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: region\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 17,\n              columnNumber: 38\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Capital : \", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: capital\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 18,\n              columnNumber: 39\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"NativeName : \", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: nativeName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 19,\n              columnNumber: 42\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 19,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Area : \", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: area\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 20,\n              columnNumber: 36\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 20,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"population : \", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: population\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 21,\n              columnNumber: 42\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [\"Languages : \", /*#__PURE__*/_jsxDEV(\"b\", {\n              children: languages.map(e => e.name + ' ')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 41\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 16,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }, this)\n  );\n};\n\n_s(Country, \"TUBDusNTzUPRWcajTDVtOv3/aS0=\", false, function () {\n  return [useParams];\n});\n\n_c = Country;\nexport default Country;\n\nvar _c;\n\n$RefreshReg$(_c, \"Country\");","map":{"version":3,"names":["React","useParams","Country","countries","landName","name","region","capital","flag","languages","nativeName","area","population","find","e","map"],"sources":["/home/user/Desktop/Unterricht/Moudule05-React/my Project - Countries/src/component/Country.jsx"],"sourcesContent":["import React from 'react';\nimport { useParams } from 'react-router-dom';\n\nconst Country = ({countries})=>{\n    let {landName} = useParams() \n    let {name , region , capital , flag , languages , nativeName , area , population } = countries && countries.find(e=>e.name ===landName )\n    return (\n        // <div>Test from Country</div>\n        <div className=\"lands-card card\">\n            <div className=\"card-img\" >\n                    <img className=\"card-img-top\" src={flag} alt='land-flag' width={'40%'}/>\n            </div>\n            <div class=\"card-body \">\n                <h3 className=\"card-title text-danger\">{'üìç '+name}</h3>\n\n                    <ul className=\"card-ul\">\n                        <li>Region : <b>{region}</b> </li>\n                        <li>Capital : <b>{capital}</b></li>\n                        <li>NativeName : <b>{nativeName}</b></li>\n                        <li>Area : <b>{area}</b></li>\n                        <li>population : <b>{population}</b></li>\n                        <li>Languages : <b>{languages.map(e=>(e.name+' '))}</b></li>\n                    </ul>\n                </div>\n            </div>\n    )\n}\n\nexport default Country"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,SAAT,QAA0B,kBAA1B;;;AAEA,MAAMC,OAAO,GAAG,QAAe;EAAA;;EAAA,IAAd;IAACC;EAAD,CAAc;EAC3B,IAAI;IAACC;EAAD,IAAaH,SAAS,EAA1B;EACA,IAAI;IAACI,IAAD;IAAQC,MAAR;IAAiBC,OAAjB;IAA2BC,IAA3B;IAAkCC,SAAlC;IAA8CC,UAA9C;IAA2DC,IAA3D;IAAkEC;EAAlE,IAAiFT,SAAS,IAAIA,SAAS,CAACU,IAAV,CAAeC,CAAC,IAAEA,CAAC,CAACT,IAAF,KAAUD,QAA5B,CAAlG;EACA;IAAA;IACI;IACA;MAAK,SAAS,EAAC,iBAAf;MAAA,wBACI;QAAK,SAAS,EAAC,UAAf;QAAA,uBACQ;UAAK,SAAS,EAAC,cAAf;UAA8B,GAAG,EAAEI,IAAnC;UAAyC,GAAG,EAAC,WAA7C;UAAyD,KAAK,EAAE;QAAhE;UAAA;UAAA;UAAA;QAAA;MADR;QAAA;QAAA;QAAA;MAAA,QADJ,eAII;QAAK,KAAK,EAAC,YAAX;QAAA,wBACI;UAAI,SAAS,EAAC,wBAAd;UAAA,UAAwC,QAAMH;QAA9C;UAAA;UAAA;UAAA;QAAA,QADJ,eAGQ;UAAI,SAAS,EAAC,SAAd;UAAA,wBACI;YAAA,qCAAa;cAAA,UAAIC;YAAJ;cAAA;cAAA;cAAA;YAAA,QAAb;UAAA;YAAA;YAAA;YAAA;UAAA,QADJ,eAEI;YAAA,sCAAc;cAAA,UAAIC;YAAJ;cAAA;cAAA;cAAA;YAAA,QAAd;UAAA;YAAA;YAAA;YAAA;UAAA,QAFJ,eAGI;YAAA,yCAAiB;cAAA,UAAIG;YAAJ;cAAA;cAAA;cAAA;YAAA,QAAjB;UAAA;YAAA;YAAA;YAAA;UAAA,QAHJ,eAII;YAAA,mCAAW;cAAA,UAAIC;YAAJ;cAAA;cAAA;cAAA;YAAA,QAAX;UAAA;YAAA;YAAA;YAAA;UAAA,QAJJ,eAKI;YAAA,yCAAiB;cAAA,UAAIC;YAAJ;cAAA;cAAA;cAAA;YAAA,QAAjB;UAAA;YAAA;YAAA;YAAA;UAAA,QALJ,eAMI;YAAA,wCAAgB;cAAA,UAAIH,SAAS,CAACM,GAAV,CAAcD,CAAC,IAAGA,CAAC,CAACT,IAAF,GAAO,GAAzB;YAAJ;cAAA;cAAA;cAAA;YAAA,QAAhB;UAAA;YAAA;YAAA;YAAA;UAAA,QANJ;QAAA;UAAA;UAAA;UAAA;QAAA,QAHR;MAAA;QAAA;QAAA;QAAA;MAAA,QAJJ;IAAA;MAAA;MAAA;MAAA;IAAA;EAFJ;AAoBH,CAvBD;;GAAMH,O;UACeD,S;;;KADfC,O;AAyBN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}