{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/Unterricht/Moudule05-React/my Project - Countries/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport React, { useState, useEffect } from \"react\";\nimport Navigation from './component/Navigation';\nimport CountriesGrid from './component/CountriesGrid';\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [countries, setCountries] = useState([]);\n  let url = 'https://restcountries.com/v2/all';\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const response = await fetch(url);\n        const data = await response.json();\n        console.log(data);\n        setCountries(data.map(e => {\n          return {\n            name: e.name,\n            region: e.region,\n            capital: e.capital,\n            flag: e.flag,\n            languages: e.languages,\n            nativeName: e.nativeName,\n            area: e.area,\n            population: e.population\n          };\n        }));\n      } catch (error) {\n        console.log(\"error\", error);\n      }\n    };\n\n    fetchData();\n    console.log(countries);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App container p-3 my-3\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"mb-4\",\n        children: \"Countries and Regions in the World\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Navigation, {\n        countries: countries\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: \"/World-Flag-map.jpg\",\n        alt: \"map\",\n        width: \"80%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: 'home'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/all_countries\",\n          element: /*#__PURE__*/_jsxDEV(CountriesGrid, {\n            countries: countries\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 31\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"K0y4bryvLZXgPHUuMHBgwr/1eOM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useEffect","Navigation","CountriesGrid","BrowserRouter","Router","Routes","Route","App","countries","setCountries","url","fetchData","response","fetch","data","json","console","log","map","e","name","region","capital","flag","languages","nativeName","area","population","error"],"sources":["/home/user/Desktop/Unterricht/Moudule05-React/my Project - Countries/src/App.js"],"sourcesContent":["import './App.css';\nimport React , {useState , useEffect}from \"react\";\nimport Navigation from './component/Navigation';\nimport CountriesGrid from './component/CountriesGrid';\nimport {BrowserRouter as Router, Routes, Route} from \"react-router-dom\";\n\n\nfunction App() {\n    const [countries , setCountries] = useState([])\n    let url = 'https://restcountries.com/v2/all';\n\n    useEffect(()=>{\n      const fetchData = async ()=>{\n        try{\n          const response = await fetch (url);\n          const data = await response.json();\n          console.log(data);\n          setCountries(data.map(e=>{\n            return(\n              {\n                name : e.name,\n                region : e.region,\n                capital : e.capital,\n                flag : e.flag,\n                languages : e.languages,\n                nativeName : e.nativeName,\n                area : e.area,\n                population : e.population\n              }\n            )\n          }))\n        }catch (error){\n          console.log(\"error\", error);\n        }\n      }\n      fetchData()\n      console.log(countries);\n    } , [])\n\n      return (\n    <Router>\n      <div className=\"App container p-3 my-3\">\n        <h1 className='mb-4'>Countries and Regions in the World</h1>\n          <Navigation countries={countries}/> \n        <img src='/World-Flag-map.jpg' alt='map' width='80%'/>\n        <br/>\n        <Routes>\n            <Route path = '/' \n                   element = {'home'}/>\n\n            <Route path = '/all_countries' \n                   element = {<CountriesGrid countries={countries}/>}/>\n        </Routes>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;"],"mappings":";;;AAAA,OAAO,WAAP;AACA,OAAOA,KAAP,IAAgBC,QAAhB,EAA2BC,SAA3B,QAA0C,OAA1C;AACA,OAAOC,UAAP,MAAuB,wBAAvB;AACA,OAAOC,aAAP,MAA0B,2BAA1B;AACA,SAAQC,aAAa,IAAIC,MAAzB,EAAiCC,MAAjC,EAAyCC,KAAzC,QAAqD,kBAArD;;;AAGA,SAASC,GAAT,GAAe;EAAA;;EACX,MAAM,CAACC,SAAD,EAAaC,YAAb,IAA6BV,QAAQ,CAAC,EAAD,CAA3C;EACA,IAAIW,GAAG,GAAG,kCAAV;EAEAV,SAAS,CAAC,MAAI;IACZ,MAAMW,SAAS,GAAG,YAAU;MAC1B,IAAG;QACD,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAEH,GAAF,CAA5B;QACA,MAAMI,IAAI,GAAG,MAAMF,QAAQ,CAACG,IAAT,EAAnB;QACAC,OAAO,CAACC,GAAR,CAAYH,IAAZ;QACAL,YAAY,CAACK,IAAI,CAACI,GAAL,CAASC,CAAC,IAAE;UACvB,OACE;YACEC,IAAI,EAAGD,CAAC,CAACC,IADX;YAEEC,MAAM,EAAGF,CAAC,CAACE,MAFb;YAGEC,OAAO,EAAGH,CAAC,CAACG,OAHd;YAIEC,IAAI,EAAGJ,CAAC,CAACI,IAJX;YAKEC,SAAS,EAAGL,CAAC,CAACK,SALhB;YAMEC,UAAU,EAAGN,CAAC,CAACM,UANjB;YAOEC,IAAI,EAAGP,CAAC,CAACO,IAPX;YAQEC,UAAU,EAAGR,CAAC,CAACQ;UARjB,CADF;QAYD,CAbY,CAAD,CAAZ;MAcD,CAlBD,CAkBC,OAAOC,KAAP,EAAa;QACZZ,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBW,KAArB;MACD;IACF,CAtBD;;IAuBAjB,SAAS;IACTK,OAAO,CAACC,GAAR,CAAYT,SAAZ;EACD,CA1BQ,EA0BL,EA1BK,CAAT;EA4BE,oBACF,QAAC,MAAD;IAAA,uBACE;MAAK,SAAS,EAAC,wBAAf;MAAA,wBACE;QAAI,SAAS,EAAC,MAAd;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEI,QAAC,UAAD;QAAY,SAAS,EAAEA;MAAvB;QAAA;QAAA;QAAA;MAAA,QAFJ,eAGE;QAAK,GAAG,EAAC,qBAAT;QAA+B,GAAG,EAAC,KAAnC;QAAyC,KAAK,EAAC;MAA/C;QAAA;QAAA;QAAA;MAAA,QAHF,eAIE;QAAA;QAAA;QAAA;MAAA,QAJF,eAKE,QAAC,MAAD;QAAA,wBACI,QAAC,KAAD;UAAO,IAAI,EAAG,GAAd;UACO,OAAO,EAAI;QADlB;UAAA;UAAA;UAAA;QAAA,QADJ,eAII,QAAC,KAAD;UAAO,IAAI,EAAG,gBAAd;UACO,OAAO,eAAI,QAAC,aAAD;YAAe,SAAS,EAAEA;UAA1B;YAAA;YAAA;YAAA;UAAA;QADlB;UAAA;UAAA;UAAA;QAAA,QAJJ;MAAA;QAAA;QAAA;QAAA;MAAA,QALF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADE;AAiBL;;GAjDQD,G;;KAAAA,G;AAmDT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}