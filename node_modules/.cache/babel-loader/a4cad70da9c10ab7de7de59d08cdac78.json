{"ast":null,"code":"var _jsxFileName = \"/home/user/Desktop/Unterricht/Moudule05-React/my Project - Countries/src/component/Continents.jsx\";\nimport React from \"react\";\nimport { Link } from 'react-router-dom';\nimport ContiFunction from './ContiFunction';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Continents = _ref => {\n  let {\n    countries\n  } = _ref;\n  let continents = [{\n    name: 'Africa',\n    img: './imges/africa.jpg',\n    path: 'Africa'\n  }, {\n    name: 'The Americas',\n    img: './imges/north-america.jpg',\n    path: 'Americas'\n  }, {\n    name: 'Asia',\n    img: './imges/asia.jpg',\n    path: 'Asia'\n  }, {\n    name: 'Europe',\n    img: './imges/Europe.jpg',\n    path: 'Europe'\n  }, {\n    name: 'Australia',\n    img: './imges/Australia.jpg',\n    path: 'Australia'\n  }, {\n    name: 'Antarctica - Oceania',\n    img: './imges/Antarctica.jpg',\n    path: 'Antarctica'\n  }];\n  let sorted = [];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"continents \",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"cont-card\",\n      children: continents.map(con => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card\",\n          onClick: () => {\n            sorted = countries.filter(land => land.region === con.path);\n            console.log('sorted', sorted);\n            return sorted;\n          },\n          children: [/*#__PURE__*/_jsxDEV(Link, {\n            to: '/' + con.path,\n            children: /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: con.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 67\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 41\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: con.img,\n            alt: \"map\",\n            width: \"200px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 41\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 37\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sortedLands\",\n      children: sorted.map()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 9\n  }, this);\n};\n\n_c = Continents;\nexport default Continents;\n/*\nonClick={(e)=>{\n                            e.preventDefault()\n                            countries.filter((country)=>{\n                                country.region == con.path ? \n                            })\n                    }\n\n*/\n\nvar _c;\n\n$RefreshReg$(_c, \"Continents\");","map":{"version":3,"names":["React","Link","ContiFunction","Continents","countries","continents","name","img","path","sorted","map","con","filter","land","region","console","log"],"sources":["/home/user/Desktop/Unterricht/Moudule05-React/my Project - Countries/src/component/Continents.jsx"],"sourcesContent":["import React from \"react\";\nimport {Link} from 'react-router-dom'\nimport ContiFunction from './ContiFunction';\n\nconst Continents = ({countries})=>{\n    let continents = [\n        {   name : 'Africa' , \n            img : './imges/africa.jpg', \n            path: 'Africa'\n        },\n        {   name : 'The Americas' , \n            img : './imges/north-america.jpg', \n            path: 'Americas'\n        },\n        {   name : 'Asia' , \n            img : './imges/asia.jpg', \n            path: 'Asia'\n        },\n        {   name : 'Europe' , \n            img : './imges/Europe.jpg', \n            path: 'Europe'\n        },\n        {   name : 'Australia' , \n            img : './imges/Australia.jpg', \n            path: 'Australia'\n        },\n        {   name : 'Antarctica - Oceania' , \n            img : './imges/Antarctica.jpg', \n            path: 'Antarctica'\n        } ]\n\n        let sorted = []\n\n           \n    return(\n        <div className=\"continents \">\n            <div className=\"cont-card\" >\n                {continents.map(con=>{\n                                return(\n                                    <div className=\"card\"\n                                    \n                                    onClick={()=>{\n                                        sorted = countries.filter(land=>land.region === con.path)\n                                        console.log('sorted',sorted);\n                                        return sorted\n                                    }}>\n                                        <Link to= {'/'+ con.path}><h3>{con.name}</h3></Link>\n                                        \n                                        <img src={con.img} alt='map' width='200px'/>\n                                    </div>\n                                )}\n                            )\n                }\n                \n            </div>\n            <div className=\"sortedLands\">\n                {sorted.map()}\n            </div>\n        </div>\n    )\n}\n\nexport default Continents\n\n/*\nonClick={(e)=>{\n                            e.preventDefault()\n                            countries.filter((country)=>{\n                                country.region == con.path ? \n                            })\n                    }\n\n*/"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,IAAR,QAAmB,kBAAnB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;;;AAEA,MAAMC,UAAU,GAAG,QAAe;EAAA,IAAd;IAACC;EAAD,CAAc;EAC9B,IAAIC,UAAU,GAAG,CACb;IAAIC,IAAI,EAAG,QAAX;IACIC,GAAG,EAAG,oBADV;IAEIC,IAAI,EAAE;EAFV,CADa,EAKb;IAAIF,IAAI,EAAG,cAAX;IACIC,GAAG,EAAG,2BADV;IAEIC,IAAI,EAAE;EAFV,CALa,EASb;IAAIF,IAAI,EAAG,MAAX;IACIC,GAAG,EAAG,kBADV;IAEIC,IAAI,EAAE;EAFV,CATa,EAab;IAAIF,IAAI,EAAG,QAAX;IACIC,GAAG,EAAG,oBADV;IAEIC,IAAI,EAAE;EAFV,CAba,EAiBb;IAAIF,IAAI,EAAG,WAAX;IACIC,GAAG,EAAG,uBADV;IAEIC,IAAI,EAAE;EAFV,CAjBa,EAqBb;IAAIF,IAAI,EAAG,sBAAX;IACIC,GAAG,EAAG,wBADV;IAEIC,IAAI,EAAE;EAFV,CArBa,CAAjB;EA0BI,IAAIC,MAAM,GAAG,EAAb;EAGJ,oBACI;IAAK,SAAS,EAAC,aAAf;IAAA,wBACI;MAAK,SAAS,EAAC,WAAf;MAAA,UACKJ,UAAU,CAACK,GAAX,CAAeC,GAAG,IAAE;QACL,oBACI;UAAK,SAAS,EAAC,MAAf;UAEA,OAAO,EAAE,MAAI;YACTF,MAAM,GAAGL,SAAS,CAACQ,MAAV,CAAiBC,IAAI,IAAEA,IAAI,CAACC,MAAL,KAAgBH,GAAG,CAACH,IAA3C,CAAT;YACAO,OAAO,CAACC,GAAR,CAAY,QAAZ,EAAqBP,MAArB;YACA,OAAOA,MAAP;UACH,CAND;UAAA,wBAOI,QAAC,IAAD;YAAM,EAAE,EAAG,MAAKE,GAAG,CAACH,IAApB;YAAA,uBAA0B;cAAA,UAAKG,GAAG,CAACL;YAAT;cAAA;cAAA;cAAA;YAAA;UAA1B;YAAA;YAAA;YAAA;UAAA,QAPJ,eASI;YAAK,GAAG,EAAEK,GAAG,CAACJ,GAAd;YAAmB,GAAG,EAAC,KAAvB;YAA6B,KAAK,EAAC;UAAnC;YAAA;YAAA;YAAA;UAAA,QATJ;QAAA;UAAA;UAAA;UAAA;QAAA,QADJ;MAYE,CAbjB;IADL;MAAA;MAAA;MAAA;IAAA,QADJ,eAoBI;MAAK,SAAS,EAAC,aAAf;MAAA,UACKE,MAAM,CAACC,GAAP;IADL;MAAA;MAAA;MAAA;IAAA,QApBJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AA0BH,CAxDD;;KAAMP,U;AA0DN,eAAeA,UAAf;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA"},"metadata":{},"sourceType":"module"}